name: CI/CD - Node.js Backend

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build (if present)
        run: npm run build --if-present

      - name: Run tests (if present)
        run: npm test --if-present

      - name: Upload artifact for deploy
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: |
            .

  deploy:
    name: Deploy to remote server
    needs: ci
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Copy files to remote server
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          source: "./"
          target: ${{ secrets.REMOTE_PATH }}

      - name: Run remote deploy commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -e
            cd ${{ secrets.REMOTE_PATH }}
            # ensure node is available; install dependencies and restart using pm2
            npm ci --production
            if command -v pm2 >/dev/null 2>&1; then
              pm2 restart urlshortner || pm2 start index.js --name urlshortner
            else
              # fallback: run with a simple background node process (not recommended for production)
              pkill -f "node index.js" || true
              nohup node index.js >/dev/null 2>&1 &
            fi

# Required repository secrets:
# - SSH_PRIVATE_KEY : the private SSH key (PEM) for the user on the target server
# - SERVER_HOST     : the host or IP of your server
# - SERVER_USER     : the SSH user
# - REMOTE_PATH     : target directory on the server to deploy into (e.g. /var/www/urlshortner)
# - SERVER_PORT     : optional SSH port (default 22)

# Notes:
# - This workflow copies the repository to the remote server and runs `npm ci --production` and then tries to restart a pm2 process named `urlshortner`.
# - Adjust the restart/start command to match your hosting setup (systemd, docker, container platform, etc.).
# - For more advanced deployments (Docker, cloud providers), replace the deploy steps with the appropriate publishing commands or cloud actions.
